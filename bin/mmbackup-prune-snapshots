#!/usr/bin/env python

import argparse
import datetime
import re
import subprocess
import sys


parser = argparse.ArgumentParser()
parser.add_argument('-n', '--dry-run', action='store_true')
parser.add_argument('-v', '--verbose', action='store_true')
parser.add_argument('-y', '--yes', action='store_true')
args = parser.parse_args()


raw = subprocess.check_output(['sudo', 'zfs', 'list', '-tsnapshot'])
raw = raw.splitlines()
raw.pop(0)
snapshots = [x.split()[0] for x in raw]

by_volume = {}

for snapshot in snapshots:

    volume, name = snapshot.split('@', 1)

    for pattern in (
        r'(\d{4})-(\d{2})-(\d{2})',
        r'(\d{4})-(\d{2})-(\d{2})T(\d{2})',
        r'(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2})',
        r'(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})',
    ):
        m = re.match('^%s(?:-\d{2}:\d{2})?$' % pattern, name)
        if not m:
            continue
        
        ints = map(int, m.groups())
        while len(ints) < 6:
            ints.append(0)
        ctime = datetime.datetime(*ints)
        break
    else:
        if args.verbose:
            print >> sys.stderr, 'Could not parse snapshot name:', snapshot
        continue

    by_volume.setdefault(volume, []).append((ctime, snapshot))


now = datetime.datetime.now()

for volume, snapshots in sorted(by_volume.iteritems()):

    if args.verbose:
        print volume
        print '=' * 20

    to_keep = {}
    labels = {}

    for i, (ctime, snapshot) in enumerate(sorted(snapshots)):

	if not i:
		to_keep[(4, 'first', None)] = snapshot
	if i + 1 == len(snapshots):
		to_keep[(-1, 'latest', None)] = snapshot
        
        days = (now - ctime).days

        # Always keep the monthly one.
        month = ctime.replace(day=1, hour=0, minute=0, second=0)
        to_keep.setdefault((3, 'monthly', month), snapshot)

        # Weekly for ~2 months:
        if days <= 62:
            week = (ctime - datetime.timedelta(days=ctime.weekday())).replace(hour=0, minute=0, second=0)
            to_keep.setdefault((2, 'weekly', week), snapshot)

        # Daily for 2 weeks.
        if days <= 14:
            day = ctime.replace(hour=0, minute=0, second=0)
            to_keep.setdefault((1, 'daily', day), snapshot)

        # All for 1 week.
        if days <= 7:
            to_keep[(0, 'all', ctime)] = snapshot

    
    to_keep = {snapshot: label for (_, label, _), snapshot in sorted(to_keep.iteritems(), reverse=True)}

    for ctime, snapshot in sorted(snapshots):
        label = to_keep.get(snapshot)
        if args.verbose:
            print '%7s %s' % (label or '-', snapshot)
        if not label:
            cmd = ['sudo', 'zfs', 'destroy', snapshot]
            if args.verbose:
                print '            $', ' '.join(cmd)
            if not args.dry_run:
                yes = args.yes
                if not yes:
                    res = raw_input('Delete %s ? [yN]: ' % snapshot).strip()
                    yes = res.lower() in ('y', 'yes')
                if yes:
                    subprocess.check_call(cmd)

    if args.verbose:
        print
    
 
